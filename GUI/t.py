# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui_test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from Hands import tests, TestForCircle

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(90, 320, 400, 121))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")

        self.bts = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.bts.setContentsMargins(0, 0, 0, 0)
        self.bts.setObjectName("bts")

        self.run_function3 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.run_function3.setObjectName("run_function3")
        self.run_function3.clicked.connect(tests.func3)
        self.bts.addWidget(self.run_function3)

        self.run_function2 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.run_function2.setObjectName("run_function2")
        #self.run_function2.clicked.connect(TestForCircle.run_program())
        self.bts.addWidget(self.run_function2)

        self.run_function1 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.run_function1.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Segoe UI Emoji")
        font.setBold(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.run_function1.setFont(font)
        self.run_function1.setCheckable(False)
        self.run_function1.setFlat(False)
        self.run_function1.setObjectName("run_function1")

        self.bts.addWidget(self.run_function1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 30, 200, 30))
        self.label.setObjectName("label")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(110, 90, 256, 192))
        self.graphicsView.setObjectName("graphicsView")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 511, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew_File = QtWidgets.QAction(MainWindow)
        self.actionNew_File.setObjectName("actionNew_File")
        self.menuFile.addAction(self.actionNew_File)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.run_function3.setText(_translate("MainWindow", "Run_function3"))
        self.run_function2.setText(_translate("MainWindow", "Run_function2"))
        self.run_function1.setText(_translate("MainWindow", "Run_function1"))
        self.label.setText(_translate("MainWindow", "Its The Main Windows!"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionNew_File.setText(_translate("MainWindow", "New File"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
